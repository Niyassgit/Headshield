<%- include("../../views/partials/admin/header") %>

    <head>
        <style>
            .thumbnails-container {
                display: flex;
                overflow-x: auto;
            }


            .thumbnail {
                margin-right: 10px;
            }

            .input-upload {
                position: relative;
            }


            .error-message {
                color: red;
                display: none;
            }
            .image-cropper {
                display: none;
                margin: 20px 0;
                gap: 10px;
            }

            .image-cropper img {
                max-width: 100%;
                height: auto;
            }

            #imgView1, #imgView2, #imgView3, #imgView4 {
                max-width: 100%;
                height: auto;
                display: none;
            }
                    </style>
        <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>



    </head>
    <section class="content-main">
        <div class="row">
            <div class="col-9">
                <div class="content-header">
                    <h2 class="content-title">Edit Product</h2>


                </div>
            </div>
            <div class="col-lg-6">
                <div class="card mb-4">


                    <div class="card-body">
                        <form id="productForm" method="POST" action="/admin/editProduct/<%= product._id %>" enctype="multipart/form-data">
                            <div class="mb-4">
                                <label for="product_name" class="form-label">Product Name</label>
                                <input type="text" name="productName" value="<%= product.productName %>"
                                    class="form-control border" id="product_name">
                                <div id="productName-error" class="error-message"></div>
                            </div>
                            <div class="col-lg-4 mb-4">
                                <label class="form-label">Brand</label>
                                <select class="form-select border" name="brand">
                                    <% for(let i=0;i<brand.length;i++){ %>
                                        <option value="<%= brand[i].brandName %>">
                                            <%= brand[i].brandName %>
                                        </option>

                                        <% }%>

                                </select>
                                <div id="brand-error" class="error-message"></div>


                            </div>
                            <div class="mb-4">
                                <label class="form-label">Full description</label>
                                <input name="descriptionData" value="<%= product.description %>"
                                    class="form-control border" rows="4">
                                <div id="description-error" class="error-message"></div>
                            </div>
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Regular price</label>
                                        <input placeholder="$" name="regularPrice" type="text"
                                            value="<%= product.regularPrice %>" class="form-control border">
                                        <div id="regularPrice-error" class="error-message"></div>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Sale price</label>
                                        <input name="salePrice" type="text" value="<%= product.salePrice %>"
                                            class="form-control border">
                                    </div>
                                    <div id="salePrice-error" class="error-message"></div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Quantity</label>
                                        <input name="quantity" type="text" value="<%= product.quantity %>"
                                            class="form-control border">
                                        <div id="quantity-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">

                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Color</label>
                                        <input name="color" type="text" value="<%= product.color %>"
                                            class="form-control border">
                                        <div id="color-error" class="error-message"></div>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Size</label>
                                        <select class="form-select border" name="size">
                                            <option value="md">MD</option>
                                            <option value="lg">LG</option>
                                            <option value="xl">XL</option>
                                            <option value="xxl">XXL</option>
                                        </select>
                                        <div id="size-error" class="error-message"></div>
                                    </div>
                                </div>

                            </div>
                            <div class="card mb-4">


                                <div class="card-body">
                                    <div class="row gx-2">
                                        <div class="col-sm-6 mb-3">
                                            <label class="form-label">Category</label>
                                            <select class="form-select border" style="width: 150px;" name="category">
                                                <% for(let i=0;i<category.length;i++) {%>
                                                    <option value="<%= category[i].name %>">
                                                        <%= category[i].name %>
                                                    </option>
                                                    <% } %>
                                            </select>


                                            <div id="category-error" class="error-message"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="card mb-2">
                                <div class="card-header">
                                    <h4>Choose images</h4>
                                </div>
                                <% for (let i=0; i < product.productImage.length; i++) { %>
                                    <div class="col-md-12" id="image_<%= product.productImage[i] %>">
                                        <div class="mb-4">
                                            <div class="col-12">
                                                <input type="hidden" value="<%= product.productImage[i] %>"
                                                    id="imageDatas">
                                                <img class="rounded" style="width: 50px; height: 60px;"
                                                    src="/uploads/re-image/<%= product.productImage[i] %>"
                                                    alt="Product Image">
                                                <i onclick="deleteSingleImage('<%= product.productImage[i] %>', '<%= product._id %>')"
                                                    style="position: absolute; margin-left: .5rem; cursor: pointer;"
                                                    class="fa-thin fa-x"></i>
                                            </div>
                                        </div>
                                    </div>
                                    <% } %>


                                        <div class="card-body">
                                            <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                <img src="" alt="" id="imgView1">
                                                <input class="form-control" type="file" name="images" id="input1"
                                                    accept="image/png, image/jpeg, image/jpg"
                                                    onchange="viewImage(event, 1)"> 
        
                                            </div>
                                            <div class="image-cropper d-flex align-items-center"
                                                style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                <img src="" id="croppedImg1" alt="">
                                                <button type="button" id="saveButton1"
                                                    class="btn-sm btn-primary">Save</button>
                                            </div>
                                            <div class="row">
                                                <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                    <img src="" alt="" id="imgView2">
                                                    <input class="form-control" type="file" name="images" id="input2"
                                                        accept="image/png, image/jpeg, image/jpg"
                                                        onchange="viewImage(event, 2)">
                                                       
                                                </div>
                                                <div class="image-cropper d-flex align-items-center"
                                                    style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                    <img src="" id="croppedImg2" alt="">
                                                    <button type="button" id="saveButton2"
                                                        class="btn-sm btn-primary">Save</button>
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                    <img src="" alt="" id="imgView3">
                                                    <input class="form-control" type="file" name="images" id="input3"
                                                        accept="image/png, image/jpeg, image/jpg"
                                                        onchange="viewImage(event, 3)">
                                                     
                                                </div>
                                                <div class="image-cropper d-flex align-items-center"
                                                    style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                    <img src="" id="croppedImg3" alt="">
                                                    <button type="button" id="saveButton3"
                                                        class="btn-sm btn-primary">Save</button>
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                    <img src="" alt="" id="imgView4">
                                                    <input class="form-control" type="file" name="images" id="input4"
                                                        accept="image/png, image/jpeg, image/jpg"
                                                        onchange="viewImage(event, 4)">
                                                        
                                                </div>
                                                <div class="image-cropper d-flex align-items-center"
                                                    style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                    <img src="" id="croppedImg4" alt="">
                                                    <button type="button" id="saveButton4"
                                                        class="btn-sm btn-primary">Save</button>
                                                </div>
                                            </div>
                                        </div>
                            </div>
                            <div>


                                <button
                                class="btn btn-md rounded font-sm hover-up"
                                id="updatebtn"
                                type="button"
                                onclick="validateAndSubmit()">Update</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        </div>
    </section>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
    <script>
        let selectedImages = [];

        // Handle Image Selection and Thumbnails
        function handleFileSelect(event) {
            const files = event.target.files;
            console.log('files',files);
            
            const addedImagesContainer = document.getElementById("addedImagesContainer");
            addedImagesContainer.innerHTML = "";

            for (let i = 0; i < files.length; i++) {
                const file = files[i];
                selectedImages.push(file);

                const thumbnail = document.createElement("div");
                thumbnail.classList.add("thumbnail");

                const img = document.createElement("img");
                img.src = URL.createObjectURL(file);
                img.alt = "thumbnail";
                img.style.width = "50px";
                img.style.height = "auto";

                const removeIcon = document.createElement("span");
                removeIcon.classList.add("remove-icon");
                removeIcon.innerHTML = "&times;";
                removeIcon.addEventListener("click", function () {
                    const index = selectedImages.indexOf(file);
                    if (index !== -1) {
                        selectedImages.splice(index, 1);
                    }
                    thumbnail.remove();
                });

                thumbnail.appendChild(img);
                thumbnail.appendChild(removeIcon);
                addedImagesContainer.appendChild(thumbnail);
            }
        }

        // Delete Existing Image
        function deleteSingleImage(imageId, productId) {
    Swal.fire({
        title: "Are you sure?",
        text: "Do you really want to delete this image?",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes, delete it!",
    }).then((result) => {
        if (result.isConfirmed) {
            $.ajax({
                url: "/admin/deleteImage",
                method: "post",
                data: { imageNameToServer: imageId, productIdToServer: productId },
                success: function (response) {
                    if (response.status === true) {
                        $("#image_" + imageId).remove();
                        updateImageSlots();

                        Swal.fire("Deleted!", "The image has been deleted.", "success");
                        window.location.reload();
                    } else {
                        Swal.fire("Error!", "Failed to delete the image.", "error");
                    }
                },
                error: function () {
                    Swal.fire("Error!", "Server error occurred.", "error");
                }
            });
        }
    });
}

function updateImageSlots() {
            const remainingImages = $("[id^='image_']").length;
            for (let i = 1; i <= 4; i++) {
                if (i > remainingImages) {
                    $(`#input${i}`).closest('.card-body').show();
                }
            }
        }


        let croppers = {};

function viewImage(event, index) {
    const input = event.target.files[0];
    if (input) {
        const imgView = document.getElementById(`imgView${index}`); 
        const cropperContainer = document.querySelector(`#croppedImg${index}`).parentNode; 
        const saveButton = document.getElementById(`saveButton${index}`); 

        if (croppers[index]) {
            croppers[index].destroy();
        }

     
        imgView.src = URL.createObjectURL(input);
        imgView.style.display = "block"; 
        cropperContainer.style.display = "block"; 

     
        croppers[index] = new Cropper(imgView, {
            aspectRatio: 1, 
            viewMode: 1, 
            autoCropArea: 1, 
            guides: true,
            background: false,
        });

   
        saveButton.addEventListener("click", async () => {
            const croppedCanvas = croppers[index].getCroppedCanvas();

   
            imgView.src = croppedCanvas.toDataURL("image/jpeg", 1.0);

        
            const croppedImg = document.getElementById(`croppedImg${index}`);
            croppedImg.style.display = "none";

  
            const fileName = `cropped-img-${Date.now()}-${index}.png`;
            await croppedCanvas.toBlob((blob) => {
                const imgFile = new File([blob], fileName, { type: "image/png" });

                const existingIndex = selectedImages.findIndex(
                    (image)=> image.index === index
                )

                if (existingIndex !== -1) {
            selectedImages[existingIndex] = { index, file: imgFile };
        } else {
            selectedImages.push({ index, file: imgFile });
        }

                const fileList = new DataTransfer();
                fileList.items.add(imgFile);
                const inputField = document.getElementById(`input${index}`);
                inputField.files = fileList.files; 
            });

            
            cropperContainer.style.display = "none";
            croppers[index].destroy();
            delete croppers[index];
        });
    }
}
     
        function validateForm() {
            let isValid = true;
            clearErrorMessages();

            const name = document.getElementsByName("productName")[0].value;
            const description = document.getElementsByName("descriptionData")[0].value;
            const brand = document.getElementsByName("brand")[0].value;
            const price = document.getElementsByName("regularPrice")[0].value;
            const salePrice = document.getElementsByName("salePrice")[0].value;
            const quantity = document.getElementsByName("quantity")[0].value;
            const color = document.getElementsByName("color")[0].value;
            const category = document.getElementsByName("category")[0].value;

            if (!name.trim()) {
                displayErrorMessage("productName-error", "Product name is required.");
                isValid = false;
            }

            if (!description.trim()) {
                displayErrorMessage("description-error", "Description is required.");
                isValid = false;
            }

            if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
                displayErrorMessage("regularPrice-error", "Enter a valid non-negative price.");
                isValid = false;
            }

            if (!/^\d+(\.\d{1,2})?$/.test(salePrice) || parseFloat(salePrice) < 0) {
                displayErrorMessage("salePrice-error", "Enter a valid non-negative sale price.");
                isValid = false;
            }

            if (parseFloat(price) <= parseFloat(salePrice)) {
                displayErrorMessage("salePrice-error", "Sale price must be less than regular price.");
                isValid = false;
            }

            if (!quantity || parseInt(quantity) < 0) {
                displayErrorMessage("quantity-error", "Quantity must be a valid non-negative number.");
                isValid = false;
            }

            if (!color.trim()) {
                displayErrorMessage("color-error", "Color is required.");
                isValid = false;
            }

            if (!category.trim()) {
                displayErrorMessage("category-error", "Category is required.");
                isValid = false;
            }

    

            return isValid;
        }

        // Display Error Messages
        function displayErrorMessage(elementId, message) {
    const errorElement = document.getElementById(elementId);
    if (errorElement) {
        errorElement.innerText = message;
        errorElement.style.display = "block";
    } else {
        console.error(`Error element with id ${elementId} not found.`);
    }
}

        // Clear Error Messages
        function clearErrorMessages() {
            const errorElements = document.querySelectorAll(".error-message");
            errorElements.forEach((element) => {
                element.innerText = "";
                element.style.display = "none";
            });
        }

        // Submit Form
        function validateAndSubmit() {
    // Delay validation slightly to ensure the cropped image is added to selectedImages
    setTimeout(() => {
        const existingImages = $("[id^='image_']").length; // Count existing images
        const selectedImagesCount = selectedImages.length; // Count newly added images
        const totalImages = existingImages + selectedImagesCount;

        if (totalImages < 4) {
            Swal.fire({
                title: "Insufficient Images",
                text: "You must have at least 4 images to update the product.",
                icon: "warning",
                confirmButtonText: "Ok"
            });
            return;
        }


        
        if (totalImages > 5) {
            Swal.fire({
                title: "Too Many Images",
                text: "You cannot have more than 5 images for a product.",
                icon: "warning",
                confirmButtonText: "Ok"
            });
            return;
        }

        // Validate other form fields
        if (validateForm()) {
            Swal.fire({
                title: "Are you sure?",
                text: "Do you want to update this product?",
                icon: "question",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, update it!"
            }).then((result) => {
                if (result.isConfirmed) {
                    // Submit the form programmatically
                    document.getElementById("productForm").submit();
                    Swal.fire(
                        "Success!",
                        "Product updated successfully!",
                        "success"
                    );
                }
            });
        }
    }, 100); // Allow time for cropped images to be added
}

  


    </script>

    <%- include("../../views/partials/admin/footer") %>