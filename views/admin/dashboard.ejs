<%- include('../partials/admin/header') %>

<style>
    /* Add this to your stylesheet or in a <style> tag in your header */
.loading-state {
    position: relative;
}

.loading-state::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(255, 255, 255, 0.7);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1;
}

.loading-state::before {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 30px;
    height: 30px;
    border: 3px solid #f3f3f3;
    border-top: 3px solid #4361ee;
    border-radius: 50%;
    animation: spin 1s linear infinite;
    z-index: 2;
}

@keyframes spin {
    0% { transform: translate(-50%, -50%) rotate(0deg); }
    100% { transform: translate(-50%, -50%) rotate(360deg); }
}
</style>

<div class="container py-4">
    <!-- Global Time Period Filter -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-body d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Dashboard Overview</h5>
                    <div class="form-group mb-0">
                        <select id="globalFilter" class="form-select" onchange="updateAllCharts()">
                            <option value="weekly" selected>Weekly</option>
                            <option value="monthly">Monthly</option>
                            <option value="yearly">Yearly</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Stats Cards with Original Style -->
    <div class="row mb-4">
        <div class="col-lg-3">
            <div class="card card-body mb-4">
                <article class="icontext">
                    <span class="icon icon-sm rounded-circle bg-primary-light"><i class="text-primary material-icons md-monetization_on"></i></span>
                    <div class="text">
                        <h6 class="mb-1 card-title">Revenue</h6>
                        <span id="revenueValue">₹<%= Number(revenue).toLocaleString('en-IN', { maximumFractionDigits: 0 }) %>
                        </span>
                        <span class="text-sm">
                            Including Shipping fees
                        </span>
                    </div>
                </article>
            </div>
        </div>
        <div class="col-lg-3">
            <div class="card card-body mb-4">
                <article class="icontext">
                    <span class="icon icon-sm rounded-circle bg-success-light"><i class="text-success material-icons md-local_shipping"></i></span>
                    <div class="text">
                        <h6 class="mb-1 card-title">Orders</h6> 
                        <span id="ordersValue"><%= orders %></span>
                        <span class="text-sm">
                             Delivered Orders 
                        </span>
                    </div>
                </article>
            </div>
        </div>
        <div class="col-lg-3">
            <div class="card card-body mb-4">
                <article class="icontext">
                    <span class="icon icon-sm rounded-circle bg-warning-light"><i class="text-warning material-icons md-qr_code"></i></span>
                    <div class="text">
                        <h6 class="mb-1 card-title">Products</h6> 
                        <span><%= products %></span>
                        <span class="text-sm">
                            In 3 Categories
                        </span>
                    </div>
                </article>
            </div>
        </div>
        <div class="col-lg-3">
            <div class="card card-body mb-4">
                <article class="icontext">
                    <span class="icon icon-sm rounded-circle bg-info-light"><i class="text-info material-icons md-shopping_basket"></i></span>
                    <div class="text">
                        <h6 class="mb-1 card-title">Users</h6> 
                        <span><%= users %></span>
                        <span class="text-sm">
                            Active accounts
                        </span>
                    </div>
                </article>
            </div>
        </div>
    </div>

    <!-- Sales Revenue Line Chart -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h5 class="card-title mb-3">Sales Revenue</h5>
                    <div style="height: 300px">
                        <canvas id="salesChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Category Pie Chart & Orders Bar Chart -->
    <div class="row mb-4">
        <div class="col-md-6 mb-3">
            <div class="card shadow-sm h-100">
                <div class="card-body">
                    <h5 class="card-title mb-3">Category Performance</h5>
                    <div style="height: 260px">
                        <canvas id="categoryChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6 mb-3">
            <div class="card shadow-sm h-100">
                <div class="card-body">
                    <h5 class="card-title mb-3">Orders Overview</h5>
                    <div style="height: 260px">
                        <canvas id="ordersChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Best Selling Products -->
    <div class="row mb-4">
        <div class="col-md-8 mb-3">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h5 class="card-title mb-3">Best Selling Products</h5>
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Product</th>
                                    <th>Category</th>
                                    <th>Price</th>
                                    <th>Sold</th>
                                </tr>
                            </thead>
                            <tbody id="bestSellingTable">
                                <% bestSellingProducts.forEach(product=>{ %>
                                <tr>
                                    <td><%= product.productName%></td>
                                    <td><%=product.category %></td>
                                    <td>₹<%= product.price %></td>
                                    <td><%= product.totalSales %></td>
                                </tr>
                                <% }) %>
                                
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4 mb-3">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h5 class="card-title mb-3">Top Performers</h5>
                    <div class="mb-4">
                        <p class="mb-1">Best Selling Brand</p>
                        <h5 id="bestBrand" class="mb-0"><%= bestBrand %></h5>
                        <small id="bestBrandSales" class="text-muted"><%=bestBrandSales%> sales</small>
                    </div>
                    <div>
                        <p class="mb-1">Best Selling Category</p>
                        <h5 id="bestCategory" class="mb-0"><%=bestCategory %></h5>
                        <small id="bestCategorySales" class="text-muted"><%= bestCategorySales %> sales</small>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Recent Orders Section (ADDED) -->
    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h5 class="card-title mb-0">Recent Orders</h5>
                        <a href="/admin/orders" class="btn btn-sm btn-outline-primary">View All</a>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Order ID</th>
                                    <th>Customer</th>
                                    <th>Product</th>
                                    <th>Date</th>
                                    <th>Amount</th>
                                    <th>Status</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody id="recentOrdersTable">
                                <% recentOrders.forEach(order => { %>
                                    <tr>
                                        <td>#ORD-<%= order.orderId %></td>
                                        <td><%= order.address.name %></td>
                                        <td><%= order.orderedItems.productName %></td>
                                        <td><%= order.createdAt.toDateString() %></td>
                                        <td>₹<%= order.finalAmount %></td>
                                        <td>
                                            <% let badgeClass = getStatusBadgeClass(order.status); %>
                                            <span class="badge <%= badgeClass %>"><%= order.status %></span>
                                        </td>
                                        <td><a href="/admin/order-details?orderId=<%= order._id %>" class="btn btn-sm btn-light">Details</a></td>
                                    </tr>
                                <% }) %>
                            </tbody>
                            
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<% function getStatusBadgeClass(status) { 
    switch (status) {
        case "Pending": return "bg-warning text-dark"; 
        case "Confirmed": return "bg-primary"; 
        case "Shipped": return "bg-info text-dark"; 
        case "Delivered": return "bg-success"; 
        case "Cancelled": return "bg-danger"; 
        case "Return Request": return "bg-secondary";
        case "Return Rejected": return "bg-danger text-warning"; 
        case "Returned": return "bg-dark text-white";case "Payment Failed": 
        return "bg-danger text-white"; 
        default: return "bg-light text-dark"; 
    }
} %>

<script src="https://cdnjs.cloudflare.com/ajax/libs/perfect-scrollbar/1.5.5/perfect-scrollbar.min.js"></script>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
let salesChart, categoryChart, ordersChart;
const chartColors = {
    primary: '#4361ee',
    success: '#2ecc71',
    warning: '#f39c12',
    info: '#3498db'
};

// Fetch data from the server based on filter
async function fetchDashboardData(filterType = "weekly") { 
    try {
        const response = await fetch(`/admin/dashboard-data?filter=${filterType}`);
        const data = await response.json();
        console.log("Fetched Data for Chart:", data); 
        return data;
    } catch (error) {
        console.error("Error fetching dashboard data:", error);
        return null;
    }
}

// Initialize Sales Chart
function initSalesChart(data) {
    const salesCanvas = document.getElementById('salesChart');
    if (!salesCanvas) return;

    const salesCtx = salesCanvas.getContext('2d');
    if (salesChart) salesChart.destroy();

    salesChart = new Chart(salesCtx, {
        type: 'line',
        data: {
            labels: data.revenueLabels || [],
            datasets: [{
                label: 'Revenue',
                data: data.revenue || [],
                borderColor: chartColors.primary,
                backgroundColor: `${chartColors.primary}20`,
                tension: 0.3,
                fill: true
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: { display: false }
            },
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: {
                        callback: (value) => '₹' + value.toLocaleString()
                    }
                }
            }
        }
    });
}

// Initialize Category Performance Pie Chart
function initCategoryChart(data) {
    const categoryCanvas = document.getElementById('categoryChart');
    if (!categoryCanvas) return;

    const categoryCtx = categoryCanvas.getContext('2d');
    if (categoryChart) categoryChart.destroy();

    categoryChart = new Chart(categoryCtx, {
        type: 'pie',
        data: {
            labels: data.categoryPerformance.map(cat => cat._id) || [],
            datasets: [{
                data: data.categoryPerformance.map(cat => cat.revenue) || [],
                backgroundColor: [chartColors.primary, chartColors.success, chartColors.warning],
                borderWidth: 0
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: { position: 'right' }
            }
        }
    });
}

// Initialize Orders Overview Bar Chart
function initOrdersChart(data) {
    const ordersCanvas = document.getElementById('ordersChart');
    if (!ordersCanvas) return;

    const ordersCtx = ordersCanvas.getContext('2d');
    if (ordersChart) ordersChart.destroy();

    ordersChart = new Chart(ordersCtx, {
        type: 'bar',
        data: {
            labels: data.ordersLabels || [],
            datasets: [{
                label: 'Orders',
                data: data.orders || [],
                backgroundColor: chartColors.primary,
                borderRadius: 4
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: { display: false }
            },
            scales: {
                y: { beginAtZero: true }
            }
        }
    });
}

// Update Best-Selling Products Table
function updateBestSellingTable(data) {
    const tableBody = document.getElementById('bestSellingTable');
    if (!tableBody) return;

    let html = '';
    (data.bestSellingProducts || []).forEach(item => {
        html += `
            <tr>
                <td>${item.productName || 'N/A'}</td>
                <td>${item.category || 'N/A'}</td>
                <td>₹${item.price || 0}</td>
                <td>${item.totalSales || 0}</td>
            </tr>
        `;
    });
    tableBody.innerHTML = html;
}

// Update Top Performers Section
function updateTopPerformers(data) {
    if (document.getElementById('bestBrand')) {
        document.getElementById('bestBrand').textContent = data.bestBrand || 'N/A';
    }
    if (document.getElementById('bestBrandSales')) {
        document.getElementById('bestBrandSales').textContent = (data.bestBrandSales || 0) + ' sales';
    }
    if (document.getElementById('bestCategory')) {
        document.getElementById('bestCategory').textContent = data.bestCategory || 'N/A';
    }
    if (document.getElementById('bestCategorySales')) {
        document.getElementById('bestCategorySales').textContent = (data.bestCategorySales || 0) + ' sales';
    }
}

// Update Summary Metrics
function updateSummaryValues(data) {
    // Update Revenue value
    const revenueElement = document.getElementById('revenueValue');
    if (revenueElement) {
        revenueElement.textContent = `₹${data.totalRevenue || 0}`;
    }
    
    // Update Orders value
    const ordersElement = document.getElementById('ordersValue');
    if (ordersElement) {
        ordersElement.textContent = data.totalOrders || 0;
    }
    
    // Add period indicator to the titles (optional enhancement)
    const filterElement = document.getElementById('globalFilter');
    if (filterElement) {
        const periodText = filterElement.options[filterElement.selectedIndex].text;
        
        // Update Revenue heading
        const revenueTitle = document.querySelector('.col-lg-3:nth-child(1) .card-title');
        if (revenueTitle) {
            revenueTitle.innerHTML = `Revenue <small class="text-muted">(${periodText})</small>`;
        }
        
        // Update Orders heading
        const ordersTitle = document.querySelector('.col-lg-3:nth-child(2) .card-title');
        if (ordersTitle) {
            ordersTitle.innerHTML = `Orders <small class="text-muted">(${periodText})</small>`;
        }
    }
}

// Update all charts and tables when filter is changed
async function updateAllCharts() {
    const filterElement = document.getElementById('globalFilter');
    if (!filterElement) return;

    const filterValue = filterElement.value;
    console.log("Filter changed to:", filterValue);
    const cards = document.querySelectorAll('.card-body');
    cards.forEach(card => card.classList.add('loading-state'));
       const data = await fetchDashboardData(filterValue);
    if (!data) {
        // Remove loading state if there was an error
        cards.forEach(card => card.classList.remove('loading-state'));
        return;
    }


    // Update charts
    initSalesChart(data);
    initCategoryChart(data);
    initOrdersChart(data);

    // Update tables and stats
    updateBestSellingTable(data);
    updateTopPerformers(data);
    updateSummaryValues(data);

    cards.forEach(card => card.classList.remove('loading-state'));
}

// Initialize everything when the page loads
document.addEventListener('DOMContentLoaded', function() {
    console.log("DOM Content Loaded - Initializing Dashboard");
    const filterElement = document.getElementById('globalFilter');
    if (!filterElement) return;

    // Set default filter value
    filterElement.value = 'monthly';
    
    // Add event listener for filter changes
    filterElement.addEventListener('change', updateAllCharts);
    
    // Initial load of charts
    updateAllCharts();
});
</script>



<%- include('../partials/admin/footer') %>