<%- include("../partials/admin/header") %>

    <head>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
    </head>
    <style>
        .error-message {
            color: red;
        }


        .thumbnails-container {
            display: flex;
            overflow-x: auto;
        }


        .thumbnail {
            margin-right: 10px;


        }
    </style>
    <section class="content-main">
        <div class="row">
            <div class="col-12">
                <div class="content-header">
                    <h2 class="content-title">Add New Product</h2>
                </div>
            </div>
            <div class="col-lg-12">
                <div class="card mb-4">
                    <div class="card-body">
                        <form method="post" action="/admin/addProducts" enctype="multipart/form-data" onsubmit="return validateForm()
 ">
                            <div class="mb-4">
                                <label for="product_name" class="form-label">Product Name</label>
                                <input type="text" placeholder="Type here" name="productName"
                                    class="form-control border" id="product_name">
                                <div id="productName-error" class="error-message"></div>
                            </div>
                            <div class="col-lg-4 mb-4">
                                <label class="form-label">Brand</label>
                                <select class="form-select border" name="brand">

                                    <% for(let i=0;i<brand.length;i++){ %>
                                        <option value="<%= brand[i].brandName %>">
                                            <%= brand[i].brandName %>
                                        </option>

                                        <% }%>


                                </select>
                                <div id="brand-error" class="error-message"></div>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Full description</label>
                                <textarea placeholder="Type here" id="descriptionid" name="description"
                                    class="form-control border" rows="4"></textarea>
                                <div id="description-error" class="error-message"></div>
                            </div>
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Regular price</label>
                                        <input placeholder="$" name="regularPrice" type="text"
                                            class="form-control border">
                                        <div id="regularPrice-error" class="error-message"></div>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Sale price</label>
                                        <input placeholder="$" name="salePrice" type="text" class="form-control border">

                                    </div>
                                    <div id="salePrice-error" class="error-message"></div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Quantity</label>
                                        <input placeholder="" name="quantity" type="text" class="form-control border">
                                        <div id="quantity-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">

                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Color</label>
                                        <input name="color" type="text" class="form-control border">
                                    </div>
                                    <div id="color-error" class="error-message"></div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Size</label>
                                        <select class="form-select border" name="size">
                                            <option value="md">MD</option>
                                            <option value="lg">LG</option>
                                            <option value="xl">XL</option>
                                            <option value="xxl">XXL</option>
                                        </select>
                                        <div id="size-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>

                    </div>
                    <div class="card mb-4">
                        <div class="card-body">
                            <div class="row gx-2">
                                <div class="col-sm-6 mb-3">
                                    <label class="form-label">Category</label>
                                    <select class="form-select border" style="width: 150px;" name="category">

                                        <% for(let i=0;i<cat.length;i++){ %>
                                            <option value="<%= cat[i].name %>">
                                                <%= cat[i].name %>
                                            </option>

                                            <%}%>


                                    </select>
                                    <div id="category-error" class="error-message"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card mb-2">
                        <div class="card-header">
                            <h4>Choose images</h4>
                        </div>
                        <div class="border row">
                            <div id="addedImagesContainer" class="thumbnails-container"></div>
                        </div>
                        <div class="row">
                            <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                <img src="" alt="" id="imgView1" style="display: none;">
                                <input class="form-control" type="file" name="images" id="input1"
                                    accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 1)">
                                <div id="images-error" class="error-message"></div>
                            </div>
                            <div class="image-cropper d-flex align-items-center"
                                style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                <img src="" id="croppedImg1" alt="">
                                <button type="button" id="saveButton1" class="btn-sm btn-primary">Save</button>
                            </div>
                        </div>

                        <div class="row">
                            <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                <img src="" alt="" id="imgView2" style="display: none;">


                                <input class="form-control" type="file" name="images" id="input2"
                                    accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 2)">
                            </div>
                            <div class="image-cropper d-flex align-items-center"
                                style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                <img src="" id="croppedImg2" alt="">
                                <button type="button" id="saveButton2" class="btn-sm btn-primary">Save</button>
                            </div>
                        </div>

                        <div class="row">
                            <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                <img src="" alt="" id="imgView3" style="display: none;">


                                <input class="form-control" type="file" name="images" id="input3"
                                    accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 3)">
                            </div>
                            <div class="image-cropper d-flex align-items-center"
                                style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                <img src="" id="croppedImg3" alt="">
                                <button type="button" id="saveButton3" class="btn-sm btn-primary">Save</button>
                            </div>
                        </div>

                        <div class="row">
                            <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                <img src="" alt="" id="imgView4" >



                                <input class="form-control" type="file" name="images" id="input4"
                                    accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 4)">
                            </div>
                            <div class="image-cropper d-flex align-items-center"
                                style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                <img src="" id="croppedImg4" alt="">
                                <button type="button" id="saveButton4" class="btn-sm btn-primary">Save</button>
                            </div>
                        </div>

                    </div>
                </div>
                <div>
                    <button class="btn btn-md rounded font-sm hover-up" type="button" onclick="validateAndSubmit()
                            ">Publish</button>
                </div>
                </form>
            </div>
        </div>
        </div>
        </div>
    </section>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
    <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>


    <script>
        function validateAndSubmit() {
            if (validateForm()) {
                Swal.fire({
                    title: "Are you sure ?",
                    text: "Do you want to add this product?",
                    icon: "question",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Yes,add it!"
                }).then((result) => {
                    if (result.isConfirmed) {
                        document.forms[0].submit();
                        swal.fire(
                            "Success!",
                            'Product added successfully!',
                            "success"
                        );
                    }
                });
            }
        }
        let croppers = {};

        function viewImage(event, index) {
            const input = event.target.files[0];
            if (input) {
                const imgView = document.getElementById(`imgView${index}`); 
                const cropperContainer = document.querySelector(`#croppedImg${index}`).parentNode; 
                const saveButton = document.getElementById(`saveButton${index}`); 

                if (croppers[index]) {
                    croppers[index].destroy();
                }

             
                imgView.src = URL.createObjectURL(input);
                imgView.style.display = "block"; 
                cropperContainer.style.display = "block"; 

             
                croppers[index] = new Cropper(imgView, {
                    aspectRatio: 1, 
                    viewMode: 1, 
                    autoCropArea: 1, 
                    guides: true,
                    background: false,
                });

           
                saveButton.addEventListener("click", async () => {
                    const croppedCanvas = croppers[index].getCroppedCanvas();

           
                    imgView.src = croppedCanvas.toDataURL("image/jpeg", 1.0);

                
                    const croppedImg = document.getElementById(`croppedImg${index}`);
                    croppedImg.style.display = "none";

          
                    const fileName = `cropped-img-${Date.now()}-${index}.png`;
                    await croppedCanvas.toBlob((blob) => {
                        const imgFile = new File([blob], fileName, { type: "image/png" });
                        const fileList = new DataTransfer();
                        fileList.items.add(imgFile);
                        const inputField = document.getElementById(`input${index}`);
                        inputField.files = fileList.files; 
                    });

                    
                    cropperContainer.style.display = "none";
                    croppers[index].destroy();
                    delete croppers[index];
                });
            }
        }



        function validateForm() {
            clearErrorMessages();
            const name = document.getElementsByName('productName')[0].value;
            const description = document.getElementById('descriptionid').value;
            const brand = document.getElementsByName('brand')[0].value;
            const price = document.getElementsByName('regularPrice')[0].value;
            const saleprice = document.getElementsByName('salePrice')[0].value;
            const color = document.getElementsByName('color')[0].value;
            const category = document.getElementsByName('category')[0].value;
            const images = document.getElementById('input1');
            const quantity = document.getElementsByName('quantity')[0].value;
            let isValid = true;

            let errorMessages = [];

            if (name.trim() === "") {
                errorMessages.push('Please enter a product name.');
                displayErrorMessage('productName-error', 'Please enter a product name.');
                isValid = false;
                return;
            
            } else if (!/^[a-zA-Z\s]+$/.test(name.trim())) {
                errorMessages.push('Product name should contain only alphabetic characters.');
                displayErrorMessage('productName-error', 'Product name should contain only alphabetic characters.');
                isValid = false;
                return;
            
            }

            if (description.trim() === "") {
                errorMessages.push('Please enter a product description.');
                displayErrorMessage('description-error', 'Please enter a product description.');
                isValid = false;
                return;
                
            }

            if (parseInt(quantity) < 0 || quantity.trim() === "") {
                errorMessages.push('Please enter a valid non-negative quantity.');
                displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
                isValid = false;
                return;
            }

            if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
                errorMessages.push('Please enter a valid non-negative price.');
                displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
                isValid = false;
                return;
            }

            if (!/^\d+(\.\d{1,2})?$/.test(saleprice) || parseFloat(saleprice) < 0) {
                errorMessages.push('Please enter a valid non-negative sale price.');
                displayErrorMessage('salePrice-error', 'Please enter a valid non-negative sale price.');
                isValid = false;
                return;
            }

            if (parseFloat(price) <= parseFloat(saleprice)) {
                errorMessages.push('Regular price must be greater than sale price.');
                displayErrorMessage('regularPrice-error', 'Regular price must be greater than sale price.');
                isValid = false;
                return;
            }

            if (color.trim() === "") {
                errorMessages.push('Please enter a color.');
                displayErrorMessage('color-error', 'Please enter a color.');
                isValid = false;
                return;
            }
            

            if (images.files.length === 0) {
                errorMessages.push('Please select an image.');
                displayErrorMessage("images-error", 'Please select an image.');
                isValid = false;
            }

            if(images.files.length < 3){
                errorMessages.push('At least 3 images are required.');
                displayErrorMessage("images-error",'At least 3 images are required');
                isValid=false;
            }

            if (!isValid) {
                Swal.fire({
                    title: 'Validation Error!',
                    text: errorMessages.join('\n'),
                    icon: 'error',
                    confirmButtonText: 'Okay'
                });
            }

            return isValid;
        }



        function displayErrorMessage(elementId, message) {
            var errorElement = document.getElementById(elementId);
            errorElement.innerText = message;
            errorElement.style.display = "block";
        }


        function clearErrorMessages() {
            const errorElements = document.getElementsByClassName('error-message');
            Array.from(errorElements).forEach(element => {
                element.innerText = '';
            });
            const errorMessage = document.getElementById('errorMessage');


        }




    </script>
    <%- include("../partials/admin/footer") %>