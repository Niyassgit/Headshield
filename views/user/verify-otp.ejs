<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>OTP Verification</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        body {
            background-color: #f8f9fa;
        }
        .otp-container {
            max-width: 400px;
            margin: 50px auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        .otp-input {
            width: 3rem;
            height: 3rem;
            text-align: center;
            font-size: 1.5rem;
            margin: 0 5px;
            border: 1px solid #ced4da;
            border-radius: 4px;
        }
        .otp-input:focus {
            border-color: #007bff;
            box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
        }
    </style>
</head>
<body>
    <div class="otp-container text-center">
        <h2 class="mb-3">OTP Verification</h2>
        <p class="text-muted mb-2">Enter the 6-digit code sent to your email.</p>
        <p class="text-muted" id="timer">Resend OTP in 1:00</p>
        <form id="otp-form">
            <div class="d-flex justify-content-center mb-3">
                <input type="text" class="otp-input" maxlength="1" id="digit-1">
                <input type="text" class="otp-input" maxlength="1" id="digit-2">
                <input type="text" class="otp-input" maxlength="1" id="digit-3">
                <input type="text" class="otp-input" maxlength="1" id="digit-4">
                <input type="text" class="otp-input" maxlength="1" id="digit-5">
                <input type="text" class="otp-input" maxlength="1" id="digit-6">
            </div>
            <button type="submit" class="btn btn-primary btn-block w-100">Verify</button>
        </form>
        <p class="mt-3">
            Didnâ€™t receive the code? <a href="#" class="text-decoration-none" id="resend-link">Resend</a>
        </p>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Automatically focus on the next input
        const inputs = document.querySelectorAll('.otp-input');
        inputs.forEach((input, index) => {
            input.addEventListener('input', () => {
                if (input.value && index < inputs.length - 1) {
                    inputs[index + 1].focus();
                }
            });
            input.addEventListener('keydown', (e) => {
                if (e.key === 'Backspace' && index > 0 && !input.value) {
                    inputs[index - 1].focus();
                }
            });
        });

        // Timer Logic
        let timerElement = document.getElementById("timer");
        let resendLink = document.getElementById("resend-link");
        let timeLeft = 60;
        let timerInterval;

        const updateTimer = () => {
            if (timeLeft > 0) {
                const minutes = Math.floor(timeLeft / 60);
                const seconds = timeLeft % 60;
                timerElement.textContent = `Resend OTP in ${minutes}:${seconds < 10 ? "0" : ""}${seconds}`;
                timeLeft--;
            } else {
                clearInterval(timerInterval);
                timerElement.textContent = "You can now resend the OTP.";
                resendLink.style.pointerEvents = "auto";
                resendLink.style.color = "#007bff"; // Restore original color
            }
        };

        // Start the timer
        const startTimer = () => {
            timeLeft = 60;
            timerInterval = setInterval(updateTimer, 1000);
        };
        startTimer();

        // Handle form submission
        document.getElementById('otp-form').addEventListener('submit', async (e) => {
            e.preventDefault();

            // Collect OTP inputs
            const otp = Array.from(inputs).map(input => input.value).join('');

            // Check if OTP is complete
            if (otp.length !== 6) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Incomplete OTP',
                    text: 'Please enter all 6 digits of the OTP.',
                });
                return;
            }

            try {
                // Make AJAX request to verify OTP
                const response = await fetch('/verify-otp', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ otp }),
                });

                const result = await response.json();

                if (result.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'OTP Verified Successfully',
                        showConfirmButton: false,
                        timer: 1500,
                    }).then(() => {
                        window.location.href = result.redirectUrl;
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Invalid OTP',
                        text: result.message,
                    });
                }
            } catch (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'An error occurred. Please try again later.',
                });
                console.error('Error verifying OTP:', error);
            }
        });

        // Handle resend link click
        resendLink.addEventListener('click', (e) => {
            e.preventDefault();

            Swal.fire({
                title: 'Resend OTP?',
                text: "Are you sure you want to resend the OTP? This will restart the timer.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, Resend',
            }).then((result) => {
                if (result.isConfirmed) {
                    Swal.fire({
                        icon: 'success',
                        title: 'OTP Resent',
                        text: 'A new OTP has been sent to your email.',
                    });
                    // Restart the timer
                    clearInterval(timerInterval);
                    startTimer();
                    resendLink.style.pointerEvents = "none";
                    resendLink.style.color = "grey";
                }
            });
        });
    </script>
</body>
</html>
