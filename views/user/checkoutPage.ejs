<%- include("../../views/partials/user/header") %>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .checkout-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }

        .section-title {
            font-size: 1.5rem;
            color: #2d3436;
            margin-bottom: 1.5rem;
            padding-bottom: 0.5rem;
            border-bottom: 2px solid #e2e8f0;
        }

        .address-card {
            background: #fff;
            border: 1px solid #e2e8f0;
            border-radius: 10px;
            padding: 1.5rem;
            margin-bottom: 1rem;
            transition: all 0.3s ease;
            cursor: pointer;
        }
        .address-box {
            background: #fff;
            border: 1px solid #e2e8f0;
            border-radius: 10px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
        }


        .address-card:hover {
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transform: translateY(-2px);
        }

        .address-card.selected {
            border: 2px solid #4CAF50;
        }

        .product-card {
            background: #fff;
            border-radius: 10px;
            padding: 1.5rem;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        }

        .payment-option {
            background: #fff;
            border: 1px solid #e2e8f0;
            border-radius: 8px;
            padding: 1rem;
            margin-bottom: 0.75rem;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .payment-option:hover {
            background: #f8f9fa;
        }

        .payment-option.selected {
            border-color: #4CAF50;
            background: #f1f8f1;
        }

        .payment-icon {
            width: 24px;
            margin-right: 10px;
        }

        .coupon-section {
            background: #fff;
            border-radius: 10px;
            padding: 1.5rem;
            margin-top: 1.5rem;
        }

        .coupon-input {
            border: 1px solid #e2e8f0;
            border-radius: 8px;
            padding: 0.75rem;
            width: 70%;
        }

        .apply-btn {
            background: #4CAF50;
            color: white;
            border: none;
            border-radius: 8px;
            padding: 0.75rem 1.5rem;
            cursor: pointer;
            transition: background 0.3s ease;
        }

        .apply-btn:hover {
            background: #45a049;
        }

        .order-summary, .product-card {
            background: #fff;
            border-radius: 10px;
            padding: 1.5rem;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        }

        .summary-item {
            display: flex;
            justify-content: space-between;
            padding: 0.75rem 0;
            border-bottom: 1px solid #e2e8f0;
        }

        .place-order-btn {
            background: #4CAF50;
            color: white;
            border: none;
            border-radius: 8px;
            padding: 1rem;
            width: 100%;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .place-order-btn:hover {
            background: #45a049;
            transform: translateY(-2px);
        }

        .add-address-btn {
            background: transparent;
            border: 2px dashed #4CAF50;
            color: #4CAF50;
            border-radius: 8px;
            padding: 1rem;
            width: 100%;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .add-address-btn:hover {
            background: #f1f8f1;
        }
        .breadcrumb {
      display: flex;
      justify-content: center;
      align-items: center;
      gap: 4px;
      padding: 0;
      margin: 0;
      list-style: none;
  }
  
  .breadcrumb-item {
      font-size: 12px; 
      color: #666;
  }
  
  .breadcrumb-item a {
      color: #333;
      text-decoration: none;
  }
  
  .breadcrumb-item a:hover {
      text-decoration: underline;
  }
  
  .breadcrumb-item:not(:last-child)::after {
      content: "/";
      margin-left: 4px;  
  }
  
  .breadcrumb-item.active {
      color: #999;
  }
  
  .breadcrumb-item i {
      font-size: 11px;  
      margin-right: 3px;  
  }
  </style> 
    
    
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="/"><i class="fas fa-home"></i> Home</a>
        </li>
        <li class="breadcrumb-item">
            <a href="/cart"><i class="fas fa-shopping-cart"></i> Shopping Cart</a>
        </li>
        <li class="breadcrumb-item active" aria-current="page">
            <i class="fas fa-box"></i> Checkout
        </li>
    </ol>
</nav>


  <form action="/placeOrder" method="POST">
    <div class="checkout-container">
        <h1 class="section-title text-center mb-5">Secure Checkout</h1>

        <div class="row">
            <!-- Left Column (Addresses) -->
            <div class="col-lg-6">
                <div class="address-box">
                    <h2 class="section-title">Delivery Address</h2>
                    <% address.forEach(addr => { %>
                        <div class="address-card">
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="address" value="<%= addr._id %>">
                                <label class="form-check-label">
                                    <strong><%= addr.addressType %></strong><br>
                                    <%= addr.name %><br>
                                    <%= addr.landMark %>, <%= addr.city %>, <%= addr.state %>,<br>
                                    <%= addr.country %>-<%= addr.pincode %>,<br>
                                    <%= addr.phone %>
                                </label>
                            </div>
                            <div class="address-actions mt-2">
                                <button class="btn btn-sm btn-outline-primary edit-address" 
                                    data-address-id="<%= addr._id %>"
                                    data-address-type="<%= addr.addressType %>"
                                    data-name="<%= addr.name %>"
                                    data-phone="<%= addr.phone %>"
                                    data-altphone="<%= addr.altPhone %>"
                                    data-landmark="<%= addr.landMark %>"
                                    data-city="<%= addr.city %>"
                                    data-state="<%= addr.state %>"
                                    data-country="<%= addr.country %>"
                                    data-pincode="<%= addr.pincode %>"
                                    data-bs-toggle="modal" data-bs-target="#editAddressModal">
                                    <i class="fas fa-edit"></i> Edit
                                </button>
                            </div>
                        </div>
                    <% }) %>

                    <button class="add-address-btn mt-3" data-bs-toggle="modal" data-bs-target="#addAddressModal">
                        <i class="fas fa-plus me-2"></i> Add New Address
                    </button>
                </div>
            </div>

            <!-- Right Column (Order Summary, Payment, Coupon) -->
            <div class="col-lg-6">
                <!-- Order Summary Box -->
                <div class="order-summary">
                    <h2 class="section-title">Order Summary</h2>
                    <% if(cart.length > 0){ %>
                        <% cart.forEach(item => { %>
                            <div class="summary-item">
                                <div>
                                    <h6 class="mb-1"><%= item.productId.productName %></h6>
                                    <small class="text-muted"><%= item.quantity %> x ₹<%= item.price %></small>
                                </div>
                                <span><strong>₹<%= item.quantity * item.price %></strong></span>  
                            </div>
                        <% }) %>
                    <% } %>

                    <div class="summary-item">
                        <span>Shipping</span>
                        <span>Free</span>
                    </div>
                    <div class="summary-item">
                        <span>Discount</span>
                        <span class="text-success">-₹0</span>
                    </div>
                    <div class="summary-item">
                        <strong>Total</strong>
                        <strong>₹<%= cartTotal %></strong> 
                    </div>
                </div>

                <!-- Coupon Section -->
                <div class="coupon-section mt-3">
                    <h2 class="section-title">Have a Coupon?</h2>
                    <div class="input-group">
                        <input type="text" name="coupon" class="coupon-input" placeholder="Enter coupon code">
                        <button class="apply-btn ms-2">Apply</button>
                    </div>
                </div>

                <!-- Payment Method Box -->
                <div class="product-card mt-3">
                    <h2 class="section-title">Payment Method</h2>
                    <div class="payment-option selected">
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="paymentMethod" id="cod" checked value="cod">
                            <label class="form-check-label" for="cod">
                                <i class="fas fa-money-bill-wave me-2"></i> Cash on Delivery
                            </label>
                        </div>
                    </div>

                    <div class="payment-option">
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="paymentMethod" id="wallet" value="wallet">
                            <label class="form-check-label" for="wallet">
                                <i class="fas fa-wallet me-2"></i> Wallet Balance: ₹3,000
                            </label>
                        </div>
                    </div>

                    <div class="payment-option">
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="paymentMethod" id="upi" value="upi">
                            <label class="form-check-label" for="upi">
                                <i class="fas fa-mobile-alt me-2"></i> UPI Payment
                            </label>
                        </div>
                    </div>

                    <div class="payment-option">
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="paymentMethod" id="card" value="card">
                            <label class="form-check-label" for="card">
                                <i class="fas fa-credit-card me-2"></i> Credit/Debit Card
                            </label>
                        </div>
                    </div>

                    <!-- Place Order Button Inside Payment Method -->
                    <button type="submit" class="btn btn-success mt-4 w-100">
                        <i class="fas fa-check me-2"></i> Place Order
                    </button>
                </div>
            </div>
        </div>
    </div>
</form>


<div class="modal fade" id="addAddressModal" tabindex="-1" aria-labelledby="addAddressModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addAddressModalLabel">Add New Address</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body">
                <!-- Add Address Form -->
                <form id="addAddressForm" action="/addNewAddress" method="POST" novalidate>
                    <!-- Address Type with Toggle -->
                    <div class="mb-3">
                        <label for="addressType" class="mb-2" style="font-weight: 500;">Address Type</label>
                        <select class="form-control p-3" id="addressType" name="addressType"
                            style="border-radius: 8px; border: 1px solid #ddd; font-size: 16px;" required>
                            <option value="">Select Address Type</option>
                            <option value="Home">Home</option>
                            <option value="Work">Work</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>

                    <!-- Full Name -->
                    <div class="mb-3">
                        <label for="name" class="form-label">Full Name</label>
                        <input type="text" class="form-control" id="name" name="name" >
                    </div>

                    <!-- Landmark -->
                    <div class="mb-3">
                        <label for="landmark" class="form-label">Landmark</label>
                        <input type="text" class="form-control" id="landmark" name="landMark">
                    </div>

                    <!-- City -->
                    <div class="mb-3">
                        <label for="city" class="form-label">City</label>
                        <input type="text" class="form-control" id="city" name="city" >
                    </div>

                    <!-- State -->
                    <div class="mb-3">
                        <label for="state" class="form-label">State</label>
                        <input type="text" class="form-control" id="state" name="state" >
                    </div>

                    <!-- Country -->
                    <div class="mb-3">
                        <label for="country" class="form-label">Country</label>
                        <input type="text" class="form-control" id="country" name="country" >
                    </div>

                    <!-- Pincode -->
                    <div class="mb-3">
                        <label for="pincode" class="form-label">Pincode</label>
                        <input type="number" class="form-control" id="pincode" name="pincode">
                    </div>

                    <!-- Phone Number -->
                    <div class="mb-3">
                        <label for="phone" class="form-label">Phone Number</label>
                        <input type="text" class="form-control" id="phone" name="phone" >
                    </div>

                    <!-- Alternate Phone Number -->
                    <div class="mb-3">
                        <label for="altPhone" class="form-label">Alternate Phone Number</label>
                        <input type="text" class="form-control" id="altPhone" name="altPhone">
                    </div>

                    <!-- Error Messages -->
                    <div id="errorMessages" class="text-danger mb-3" style="display: none;"></div>

                    <button type="submit" class="btn btn-success">Save Address</button>
                </form>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="editAddressModal" tabindex="-1" aria-labelledby="editAddressModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editAddressModalLabel">Edit Address</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editAddressForm" action="/chekoutPage/editAddress" method="POST" novalidate>
                    <input type="hidden" id="editAddressId" name="addressId">
                    <!-- Same fields as your add address form -->
                    <div class="mb-3">
                        <label for="editAddressType" class="mb-2">Address Type</label>
                        <select class="form-control p-3" id="editAddressType" name="addressType" required>
                            <option value="Home">Home</option>
                            <option value="Work">Work</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="editName" class="form-label">Full Name</label>
                        <input type="text" class="form-control" id="editName" name="name" >
                    </div>
                    <div class="mb-3">
                        <label for="editLandmark" class="form-label">Landmark</label>
                        <input type="text" class="form-control" id="editLandmark" name="landMark" >
                    </div>
                    <div class="mb-3">
                        <label for="editCity" class="form-label">City</label>
                        <input type="text" class="form-control" id="editCity" name="city">
                    </div>
                    <div class="mb-3">
                        <label for="editState" class="form-label">State</label>
                        <input type="text" class="form-control" id="editState" name="state">
                    </div>
                    <div class="mb-3">
                        <label for="editCountry" class="form-label">Country</label>
                        <input type="text" class="form-control" id="editCountry" name="country" >
                    </div>
                    <div class="mb-3">
                        <label for="editPincode" class="form-label">Pincode</label>
                        <input type="number" class="form-control" id="editPincode" name="pincode" >
                    </div>
                    <div class="mb-3">
                        <label for="editPhone" class="form-label">Phone Number</label>
                        <input type="number" class="form-control" id="editPhone" name="phone">
                    </div>
                    <div class="mb-3">
                        <label for="editAltPhone" class="form-label">Alternate Phone Number</label>
                        <input type="number" class="form-control" id="editAltPhone" name="altPhone">
                    </div>
                   
                    <button type="submit" class="btn" style="background-color: #45a049;color:#fff;">Update Address</button>
                </form>
            </div>
        </div>
    </div>
</div>


<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
document.addEventListener("DOMContentLoaded", function () {
    // Prevent the "Add New Address" button from triggering the place order form
    const addNewAddressBtn = document.querySelector('[data-bs-target="#addAddressModal"]');
    if (addNewAddressBtn) {
        addNewAddressBtn.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();  // Stop event from bubbling up
            const modal = new bootstrap.Modal(document.getElementById('addAddressModal'));
            modal.show();
        });
    }

    // Handle edit address functionality
    document.querySelectorAll(".edit-address").forEach(button => {
        button.addEventListener("click", function (e) {
            e.preventDefault();
            e.stopPropagation();  // Stop event from bubbling up
            const modal = document.getElementById("editAddressModal");
            
            // Populate modal fields with existing address data
            modal.querySelector("#editAddressId").value = this.dataset.addressId;
            modal.querySelector("#editAddressType").value = this.dataset.addressType;
            modal.querySelector("#editName").value = this.dataset.name;
            modal.querySelector("#editPhone").value = this.dataset.phone;
            modal.querySelector("#editAltPhone").value = this.dataset.altphone || "";
            modal.querySelector("#editLandmark").value = this.dataset.landmark;
            modal.querySelector("#editCity").value = this.dataset.city;
            modal.querySelector("#editState").value = this.dataset.state;
            modal.querySelector("#editCountry").value = this.dataset.country;
            modal.querySelector("#editPincode").value = this.dataset.pincode;
        });
    });
    const editAddressForm = document.getElementById("editAddressForm");
if (editAddressForm) {
    editAddressForm.addEventListener("submit", function (e) {
        e.preventDefault();
        e.stopPropagation();

        Swal.fire({
            title: "Confirm Address Update",
            text: "Are you sure you want to update this address?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, update it!"
        }).then((result) => {
            if (result.isConfirmed) {
                // Create FormData object
                const formData = new FormData(editAddressForm);
                
                // Convert FormData to JSON object
                const jsonData = {};
                formData.forEach((value, key) => {
                    jsonData[key] = value;
                });

                // Send AJAX request to the correct route
                fetch('/checkoutPage/editAddress', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(jsonData)
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            title: "Success!",
                            text: data.message,
                            icon: "success"
                        }).then(() => {
                            window.location.reload();
                        });
                    } else {
                        Swal.fire("Error!", data.message || "Failed to update address", "error");
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire("Error!", "An unexpected error occurred while updating the address", "error");
                });
            }
        });
    });
}
    // Handle add address form validation
    const addAddressForm = document.getElementById("addAddressForm");
    const errorMessages = document.getElementById("errorMessages");

    if (addAddressForm) {
        addAddressForm.addEventListener("submit", function (event) {
            event.preventDefault();
            event.stopPropagation();  // Stop event from bubbling up
            let errors = [];

            // Get all input values
            const addressType = document.getElementById("addressType").value.trim();
            const name = document.getElementById("name").value.trim();
            const landmark = document.getElementById("landmark").value.trim();
            const city = document.getElementById("city").value.trim();
            const state = document.getElementById("state").value.trim();
            const country = document.getElementById("country").value.trim();
            const pincode = document.getElementById("pincode").value.trim();
            const phone = document.getElementById("phone").value.trim();
            const altPhone = document.getElementById("altPhone").value.trim();

            // Validation checks
            if (addressType === "") errors.push("Please select an Address Type.");
            if (name === "") {
                errors.push("Full Name is required.");
            } else if (!/^[a-zA-Z\s]+$/.test(name)) {
                errors.push("Full Name must contain only letters and spaces.");
            }
            if (landmark === "") errors.push("Landmark is required.");
            if (city === "") {
                errors.push("City is required.");
            } else if (!/^[a-zA-Z\s]+$/.test(city)) {
                errors.push("City must contain only letters.");
            }
            if (state === "") {
                errors.push("State is required.");
            } else if (!/^[a-zA-Z\s]+$/.test(state)) {
                errors.push("State must contain only letters.");
            }
            if (country === "") {
                errors.push("Country is required.");
            } else if (!/^[a-zA-Z\s]+$/.test(country)) {
                errors.push("Country must contain only letters.");
            }
            if (pincode === "") {
                errors.push("Pincode is required.");
            } else if (!/^\d{6}$/.test(pincode)) {
                errors.push("Pincode must be a 6-digit number.");
            }
            if (phone === "") {
                errors.push("Phone Number is required.");
            } else if (!/^\d{10}$/.test(phone)) {
                errors.push("Phone Number must be a 10-digit number.");
            }
            if (altPhone !== "" && !/^\d{10}$/.test(altPhone)) {
                errors.push("Alternate Phone Number must be a 10-digit number.");
            }

            // Display errors if any
            if (errors.length > 0) {
                errorMessages.innerHTML = errors.join("<br>");
                errorMessages.style.display = "block";
            } else {
                errorMessages.style.display = "none";
                this.submit();
            }
        });
    }

    // Handle address card selection
    document.querySelectorAll('.address-card').forEach(card => {
        card.addEventListener('click', function(e) {
            // Only handle address selection if we didn't click an edit button
            if (!e.target.closest('.edit-address')) {
                document.querySelectorAll('.address-card').forEach(c => c.classList.remove('selected'));
                this.classList.add('selected');

                const radio = this.querySelector('input[type="radio"]');
                radio.checked = true;
                radio.dispatchEvent(new Event("change"));
            }
        });
    });

    // Handle payment option selection
    document.querySelectorAll('.payment-option').forEach(option => {
        option.addEventListener('click', () => {
            document.querySelectorAll('.payment-option').forEach(o => o.classList.remove('selected'));
            option.classList.add('selected');

            const radio = option.querySelector('input[type="radio"]');
            radio.checked = true;
            radio.dispatchEvent(new Event("change"));
        });
    });

    // Handle place order form submission
    const placeOrderForm = document.querySelector("form[action='/placeOrder']");
    if (placeOrderForm) {
        placeOrderForm.addEventListener("submit", function (event) {
            // Check if the submit event was triggered by a nested form
            const isNestedFormSubmit = event.target !== placeOrderForm;
            if (isNestedFormSubmit) {
                return; // Let the nested form handle its own submission
            }

            event.preventDefault();
            const selectedAddress = document.querySelector("input[name='address']:checked");
            const selectedPayment = document.querySelector("input[name='paymentMethod']:checked");

            if (!selectedAddress || !selectedPayment) {
                Swal.fire("Error!", "Please select an address and payment method.", "error");
                return;
            }

            Swal.fire({
                title: "Are you sure?",
                text: "Do you want to confirm your order?",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, place order!"
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch("/placeOrder", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({
                            address: selectedAddress.value,
                            paymentMethod: selectedPayment.value
                        })
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                title: "Success!",
                                text: data.message,
                                icon: "success"
                            }).then(() => {
                                window.location.href = "/cart";
                            });
                        } else {
                            Swal.fire("Failed!", data.message || "Something went wrong.", "error");
                        }
                    })
                    .catch(error => {
                        console.error("Error:", error);
                        Swal.fire("Error!", "An unexpected error occurred.", "error");
                    });
                }
            });
        });
    }
});

</script>




<%- include("../../views/partials/user/footer") %>