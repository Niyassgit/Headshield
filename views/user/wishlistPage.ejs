<%- include("../../views/partials/user/header") %>
<style> 
  
    .breadcrumb {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 4px;
        padding: 0;
        margin: 0;
        list-style: none;
    }
    
    .breadcrumb-item {
        font-size: 12px; 
        color: #666;
    }
    
    .breadcrumb-item a {
        color: #333;
        text-decoration: none;
    }
    
    .breadcrumb-item a:hover {
        text-decoration: underline;
    }
    
    .breadcrumb-item:not(:last-child)::after {
        content: "/";
        margin-left: 4px;  
    }
    
    .breadcrumb-item.active {
        color: #999;
    }
    
    .breadcrumb-item i {
        font-size: 11px;  
        margin-right: 3px;  
    }

  
    .wishlist-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem 1rem;
    }

    .wishlist-grid {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 2rem;
        margin: 0 auto;
    }

    .product-card-wrapper {
        width: 280px; 
        margin: 0;
        flex-shrink: 0;
    }

    .product-card {
        border: none;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        transition: transform 0.2s;
        height: 100%;
        background: white;
        border-radius: 8px;
        overflow: hidden;
    }

    .product-card:hover {
        transform: translateY(-5px);
    }

    .card-img-container {
        position: relative;
        padding-top: 100%; 
        overflow: hidden;
    }

    .card-img-top {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .wishlist-remove-btn {
        position: absolute;
        top: 10px;
        right: 10px;
        z-index: 10;
        width: 30px;
        height: 30px;
        border-radius: 50%;
        background: white;
        border: none;
        box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.2s;
    }

    .wishlist-remove-btn:hover {
        background: #f8f9fa;
        transform: scale(1.1);
    }

    .card-body {
        padding: 1.25rem;
    }

    .add-to-cart {
        width: 100%;
        border-radius: 4px;
        transition: all 0.3s;
        padding: 0.5rem;
    }

    .add-to-cart:hover {
        opacity: 0.9;
    }

   
    .empty-wishlist {
        text-align: center;
        padding: 3rem;
        background: #f8f9fa;
        border-radius: 8px;
        margin: 2rem auto;
        max-width: 400px;
    }

    /* Responsive adjustments */
    @media (max-width: 640px) {
        .wishlist-grid {
            gap: 1rem;
        }
        
        .product-card-wrapper {
            width: 100%;
            max-width: 320px;
        }
    }

    .offer-ribbon {
    position: absolute;
    top: 10px;
    background: red;
    color: white;
    padding: 8px 15px;
    font-size: 14px;
    font-weight: bold;
    transform: rotate(-15deg);
    box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);
    z-index: 10;
}

</style>

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="/"><i class="fas fa-home"></i> Home</a>
        </li>
        <li class="breadcrumb-item active" aria-current="page">
            <i class="fas fa-heart"></i> Wishlist
        </li>
    </ol>
</nav>

<div class="wishlist-container">
    <h2 class="text-center mb-4">My Wishlist</h2>

    <div class="wishlist-grid" id="wishlistItems">
        <% if (wishlist.length > 0) { %>
            <% wishlist.forEach((product) => { %>  
                <div class="product-card-wrapper">
                    <div class="product-card position-relative">
                        <% if (product.productId.finalOffer) { %>
                            <div class="offer-ribbon">
                                <%= product.productId.finalOffer %>% OFF
                            </div>
                        <% } %>
    
                        <button class="wishlist-remove-btn" data-id="<%= product._id %>">
                            <i class="fas fa-times"></i>
                        </button>
                        
                        <div class="card-img-container">
                            <img src="/uploads/re-image/<%= product.productId.productImage[0] %>" 
                                 class="card-img-top" 
                                 alt="<%= product.productId.productName %>">
                        </div>
                        
                        <div class="card-body text-center">
                            <!-- Product name wrapped in anchor tag -->
                            <h6 class="card-title mb-2">
                                <a href="/productDetails?id=<%= product.productId._id %>" 
                                   class="product-link" 
                                   style="text-decoration: none; color: inherit;">
                                    <%= product.productId.productName %>
                                </a>
                            </h6>
                            
                            <p class="text-muted mb-2">Size: <strong><%= product.productId.size %></strong></p>
                            <p class="text-muted mb-3">â‚¹<strong><%= product.productId.salePrice %></strong></p>
                            <button class="btn btn-dark add-to-cart" 
                                    data-product-id="<%= product.productId._id %>">
                                Add to Cart
                            </button>
                        </div>
                    </div>
                </div>
            <% }) %>
        <% } else { %>
            <div class="empty-wishlist">
                <i class="fas fa-heart-broken fs-4"></i>
                <p class="mt-2">Your wishlist is empty.</p>
            </div>
        <% } %>
    </div>
</div>

<!-- Scripts remain the same -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
 document.addEventListener("DOMContentLoaded", function () {
    const wishlistGrid = document.querySelector(".wishlist-grid");
    
    // Function to update empty wishlist message
    function checkAndUpdateEmptyState() {
        const remainingItems = document.querySelectorAll(".product-card-wrapper").length;
        if (remainingItems === 0) {
            const emptyMessage = `
                <div class="empty-wishlist">
                    <i class="fas fa-heart-broken fs-4"></i>
                    <p class="mt-2">Your wishlist is empty.</p>
                </div>`;
            wishlistGrid.innerHTML = emptyMessage;
        }
    }

    // Handle remove from wishlist
    wishlistGrid.addEventListener("click", async function(e) {
        const removeButton = e.target.closest(".wishlist-remove-btn");
        if (!removeButton) return;

        const productId = removeButton.getAttribute("data-id");
        const productCard = removeButton.closest(".product-card-wrapper");

        try {
            const response = await fetch(`/getWishlist/removeItem/${productId}`, {
                method: "DELETE",
            });
            const data = await response.json();

            if (data.success) {
                // Smooth removal animation
                productCard.style.transition = "all 0.3s ease";
                productCard.style.opacity = "0";
                productCard.style.transform = "scale(0.8)";
                
                setTimeout(() => {
                    productCard.remove();
                    checkAndUpdateEmptyState();
                }, 300);

                Toastify({
                    text: data.message || "Item removed from Wishlist!",
                    duration: 3000,
                    close: true,
                    gravity: "top",
                    position: "right",
                    backgroundColor: "linear-gradient(to right, #28a745, #218838)",
                    stopOnFocus: true,
                }).showToast();
            } else {
                Toastify({
                    text: data.message || "Failed to remove item!",
                    duration: 3000,
                    close: true,
                    gravity: "top",
                    position: "right",
                    backgroundColor: "linear-gradient(to right, #dc3545, #c82333)",
                    stopOnFocus: true,
                }).showToast();
            }
        } catch (error) {
            console.error('Fetch Error:', error);
            Toastify({
                text: "Something went wrong. Try again!",
                duration: 3000,
                close: true,
                gravity: "top",
                position: "right",
                backgroundColor: "linear-gradient(to right, #ffc107, #ffb300)",
                stopOnFocus: true,
            }).showToast();
        }
    });

    // Handle add to cart
    wishlistGrid.addEventListener("click", async function(e) {
        const addToCartButton = e.target.closest(".add-to-cart");
        if (!addToCartButton) return;

        const productId = addToCartButton.getAttribute("data-product-id");
        const productCard = addToCartButton.closest(".product-card-wrapper");

        if (!productId) {
            console.error("Product ID is missing!");
            return;
        }

        try {
            const response = await fetch("/addToCart", {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ 
                    productId: productId,
                    quantity: 1
                }),
            });

            if (response.url === "http://localhost:3000/login") {
                window.location.href = response.url;
                return;
            }

            const data = await response.json();

            if (!data.success && data.redirectUrl) {
                window.location.href = data.redirectUrl;
                return;
            }

            if (data.success) {
                // First add to cart success animation
                addToCartButton.innerHTML = '<i class="fas fa-check"></i> Added!';
                addToCartButton.disabled = true;
                
                // Then remove from wishlist with animation
                setTimeout(() => {
                    productCard.style.transition = "all 0.3s ease";
                    productCard.style.opacity = "0";
                    productCard.style.transform = "scale(0.8)";
                    
                    setTimeout(() => {
                        productCard.remove();
                        checkAndUpdateEmptyState();
                    }, 300);
                }, 500);

                Toastify({
                    text: data.message || "Item added to cart!",
                    duration: 3000,
                    close: true,
                    gravity: "top",
                    position: "right",
                    backgroundColor: "linear-gradient(to right, #28a745, #218838)",
                    stopOnFocus: true,
                }).showToast();
            } else {
                Toastify({
                    text: data.message || "Failed to add item!",
                    duration: 3000,
                    close: true,
                    gravity: "top",
                    position: "right",
                    backgroundColor: "linear-gradient(to right, #dc3545, #c82333)",
                    stopOnFocus: true,
                }).showToast();
            }
        } catch (error) {
            console.error('Fetch Error:', error);
            Toastify({
                text: "Something went wrong. Try again!",
                duration: 3000,
                close: true,
                gravity: "top",
                position: "right",
                backgroundColor: "linear-gradient(to right, #ffc107, #ffb300)",
                stopOnFocus: true,
            }).showToast();
        }
    });
});
</script>


<%- include("../../views/partials/user/footer") %>